
{* Get block *}
{[ const block = context /]}

{* Get properties *}
{[ let componentId = block.properties.componentId /]}
{[ let propertiesToHighlight = block.properties.propertiesToHighlight ? block.properties.propertiesToHighlight : [] /]}

{* Render content health block *}
{[ if componentId ]}
    {[ let component = ds.componentById(componentId) /]}
    {[ if component ]}
            
        {[ let properties = component.properties /]}
        {[ let propertyValues = component.propertyValues /]}

        {* Get health tag *}
        {[ let healthTag = convertHealthTagIfAny(component) /]}
        {[ let healthTagReadable = "" /]}
        {[ switch healthTag ]}
            {[ case "healthy" ]}
                {[ healthTagReadable = "Healthy" /]}
            {[ case "withering" ]}
                {[ healthTagReadable = "Withering" /]}
            {[ case "dormant" ]}
                {[ healthTagReadable = "Dormant" /]}
            {[ case "unknown" ]}
                {[ healthTagReadable = "Unknown" /]}
        {[/]}
        {[ healthTag = "healthy" /]}
        {[ healthTagReadable = "Healthy" /]}

        {* Generate inline component health *}
        <div class="component-health-row {{ healthTag }}">
            <div class="name">
                {{ healthTagReadable }}
            </div>
            <div class="date">
                Last modified {{ component.updatedAt.formatDate("MMMM DD, YYYY") }}
            </div>
        </div>

        {* Generate component health popup *}
        <div class="health-overlay d-none">
            <div class="health-overlay-content {{ healthTag }}">
                <div class="header">
                    <div class="component-health-row {{ healthTag }}">
                        <div class="name">
                            {{ healthTagReadable }}
                        </div>
                    </div>
                    {[ switch healthTag ]}
                        {[ case "healthy" ]}
                        <span class="subtitle">Healthy component is accurate and represents our most up-to-date recommendations.</span>
                        {[ case "withering" ]}
                        <span class="subtitle">Withering component has known issues, but is still generally recomended for use.</span>
                        {[ case "dormant" ]}
                        <span class="subtitle">Dormant component is no longer recommended for use, and is in need of foundational updates.</span>
                        {[ case "unknown" ]}
                        <span class="subtitle">This component doesn't provide information about its health</span>
                    {[/]}
                    <div class="row">
                        <div class="col-6"><strong>Published</strong> {{ component.createdAt.formatDate("MMMM DD, YYYY") }}</div>
                        <div class="col-6"><strong>Modified</strong> {{ component.updatedAt.formatDate("MMMM DD, YYYY") }}</div>
                    </div>  
                </div>

                {* Generate additional properties *}
                {[ if (propertiesToHighlight.count() > 0) ]}
                    {[ log propertiesToHighlight /]}
                    <div class="links">
                        {[ for property in component.properties ]}
                                {[ log property /]}
                            {[ if propertiesToHighlight.contains(property.persistentId) ]}
                                {[ log "yes" /]}
                                {* Show property as it was whitelisted by the user *}
                                <div class="row">
                                    <div class="col-6"><strong>{{ property.name }}</strong></div>
                                    <div class="col-6 text-right">
                                        {* Generate different view based on the type of property *}
                                        {[ switch property.propertyType ]}
                                            {[ case "Text" ]}
                                            {[ case "Number" ]}
                                            <div class="row">           
                                                <div class="col-6">{{ property.name }}</div>
                                                <div class="col-6 text-right">{{ propertyValues[property.codeName] ? propertyValues[property.codeName] : "-" }}</div>
                                            </div>
                                            {[ case "Generic" ]}
                                            <div class="row">           
                                                <div class="col-6">{{ property.name }}</div>
                                                <div class="col-6 text-right"><mark>{{ propertyValues[property.codeName] ? propertyValues[property.codeName] : "-" }}</mark></div>
                                            </div>
                                            {[ case "Boolean" ]}
                                            <div class="row">           
                                                <div class="col-6">{{ property.name }}</div>
                                                <div class="col-6 text-right"><span class="{{ propertyValues[property.codeName] ? "yes" : "no"}}">{{ propertyValues[property.codeName] ? "Yes" : "No"}}</span></div>
                                            </div>
                                            {[ case "Select" ]}
                                            <div class="row">           
                                                <div class="col-6">{{ property.name }}</div>
                                                {[ for option in property.options ]}
                                                    {[ if (option.id === propertyValues[property.codeName]) ]}
                                                        <div class="col-6 text-right"><mark>{{ option.name }}</mark></div>            
                                                    {[/]}
                                                {[/]}  
                                            </div>
                                            {[ case "Link" ]}
                                            {* Not supported yet properly *}
                                            <a href="#">
                                                <div class="row">
                                                    <div class="col-6">{{ property.name }}</div>
                                                    <div class="col-6 text-right"><img class="link-chevron" /></div>
                                                </div>
                                            </a>
                                            {[ case "URL" ]}
                                            <a href="{{ propertyValues[property.codeName] ? propertyValues[property.codeName] : "#" }}">
                                                <div class="row">
                                                    <div class="col-6">{{ property.name }}</div>
                                                    <div class="col-6 text-right"><img class="link-chevron" /></div>
                                                </div>
                                            </a>
                                        {[/]}
                                    </div>
                                </div>
                            {[/]}
                        {[/]}
                    </div>
                {[/]}
            </div>
        </div>
    {[ else ]}
    <p>Unable to show component health - unknown component</p>
    {[/]}
{[ else ]}
<p>Unable to show component health - please specify component first</p>
{[/]}
